use database mydb

// Create  a table
CREATE OR REPLACE TABLE MYDB.PUBLIC.LOAN_PAYMENT (
  "Loan_ID" STRING,
  "loan_status" STRING,
  "Principal" STRING,
  "terms" STRING,
  "effective_date" STRING,
  "due_date" STRING,
  "paid_off_time" STRING,
  "past_due_days" STRING,
  "age" STRING,
  "education" STRING,
  "Gender" STRING
 );


select * from public.loan_payment;


copy into public.loan_payment
from s3://bucketsnowflakes3/Loan_payments_data.csv
file_format = (type= csv,field_delimiter=',',skip_header=1);

select * from public.loan_payment;

select count(*) from public.loan_payment; --500

// =========================================================
// Transforming Data while Loading
// ============================================================


//Create  schema for external stage
create or replace schema mydb.external_stages;

// Publicly accessible staging area    
create or replace stage mydb.external_stages.aws_ext_stage
    url ='s3://bucketsnowflakes3';
    
list @mydb.external_stages.aws_ext_stage;

//Case 1: Just Viewing Data from ext stage
select  $1, $2, $3, $4, $5, $6 from @MYDB.external_stages.aws_ext_stage/OrderDetails.csv;
    
//Giving Alias Names to fields
select $1 as OID, $2 as AMT, $3 as PFT, $4 as QNT, $5 as CAT, $6 as SUBCAT 
from @MYDB.external_stages.aws_ext_stage/OrderDetails.csv;

// can change order of columns
select $1 as OID, $4 as QNT, $2 as AMT from @MYDB.external_stages.aws_ext_stage/OrderDetails.csv;
    
// Data transformation while loading

//Load only required cols

//Create table first
CREATE OR REPLACE TABLE MYDB.PUBLIC.ORDERS_EX (
    ORDER_ID VARCHAR(30),
    AMOUNT INT
    );



COPY INTO MYDB.PUBLIC.ORDERS_EX
    FROM (select s.$1, s.$2 from @MYDB.external_stages.aws_ext_stage s)
    file_format= (type = csv field_delimiter=',' skip_header=1)
    files=('OrderDetails.csv');   

select * from MYDB.PUBLIC.ORDERS_EX;


// Case3: applying basic transformation by using functions
CREATE OR REPLACE TABLE MYDB.PUBLIC.ORDERS_EX (
    ORDER_ID VARCHAR(30),
    PROFIT INT,
 AMOUNT INT,    
    CAT_SUBSTR VARCHAR(5),
    CAT_CONCAT VARCHAR(60),
 PFT_OR_LOSS VARCHAR(10)
  );

// copy command using sql functon

copy into MYDB.PUBLIC.ORDERS_EX
from (select s.$1,
             s.$3,
             s.$2,
             substring(s.$5,1,5),  -- First 5 characters of Column 5
             concat(s.$5,s.$6), -- smply$5||$6
             case when s.$3 < 0  then 'LOSS'  else 'PROFIT' end
        from @MYDB.external_stages.aws_ext_stage s)
file_format = (type = csv, field_delimiter =',', skip_header =1) 
files = ('OrderDetails.csv')

             
 
SELECT * FROM MYDB.PUBLIC.ORDERS_EX; 

// Case 4: Loading sequence numbers in columns
-- sequence = independent object that generates numbers,
--create once and use it manually
-- CREATE SEQUENCE my_seq START = 1 INCREMENT = 1;
-- More flexible: Can be reused across multiple tables.
-- Gives you more control over when and how it's used.
-- Can be used in CTEs, procedures, etc

create sequence seq1;

CREATE OR REPLACE TABLE MYDB.PUBLIC.LOAN_PAYMENT (
  "SEQ_ID" number default seq1.nextval,
  "Loan_ID" STRING,
  "loan_status" STRING,
  "Principal" STRING,
  "terms" STRING,
  "effective_date" STRING,
  "due_date" STRING,
  "paid_off_time" STRING,
  "past_due_days" STRING,
  "age" STRING,
  "education" STRING,
  "Gender" STRING
 );
             
COPY INTO PUBLIC.LOAN_PAYMENT("Loan_ID", "loan_status", "Principal", "terms", "effective_date", "due_date",
"paid_off_time", "past_due_days", "age", "education", "Gender")
    FROM s3://bucketsnowflakes3/Loan_payments_data.csv
    file_format = (type = csv  field_delimiter = ','  skip_header=1);  

//Validate the data
SELECT * FROM PUBLIC.LOAN_PAYMENT;

// AUTOINCREMENT:
--A column-level attribute used when creating a table.
-- Snowflake automatically generates a value when a row is inserted, without ---- explicitly calling anything.

CREATE OR REPLACE TABLE MYDB.PUBLIC.LOAN_PAYMENT2 (
  "LOAN_SEQ_ID" INT autoincrement start 1001 increment 1,
  "Loan_ID" STRING,
  "loan_status" STRING,
  "Principal" STRING,
  "terms" STRING,
  "effective_date" STRING,
  "due_date" STRING,
  "paid_off_time" STRING,
  "past_due_days" STRING,
  "age" STRING,
  "education" STRING,
  "Gender" STRING
 );

 //Loading the data from S3 bucket
COPY INTO PUBLIC.LOAN_PAYMENT2("Loan_ID", "loan_status", "Principal", "terms", "effective_date", "due_date",
"paid_off_time", "past_due_days", "age", "education", "Gender")
    FROM s3://bucketsnowflakes3/Loan_payments_data.csv
    file_format = (type = csv  field_delimiter = ','  skip_header=1);  

 //Validate the data
SELECT * FROM PUBLIC.LOAN_PAYMENT2;
